def gedik_yatırım(n = 4):
    link = "https://www.gedik.com/piyasalar/butun-bultenler"
    driver.get(link)
    select = Select(driver.find_element_by_id('tags'))
    select.select_by_visible_text('Günlük Bülten')
    time.sleep(3)
    href = driver.find_elements_by_xpath('//div/a')[n] #-----------------------------------------------------------------
    url = href.get_attribute("href")
    pdf = 'gedik_yatırım_' + url.split('pdf')[0][-11:-1]
    urllib.request.urlretrieve(url, f"C:/Users/berat/pdfscrap/{pdf}.pdf")
    #--------------------------------------------------------------------------------------------------------------
    def pdf_to_text(path):
        manager = PDFResourceManager()
        retstr = io.StringIO()
        layout = LAParams(all_texts=True)
        device = TextConverter(manager, retstr, laparams=layout)
        filepath = open(path, 'rb')
        interpreter = PDFPageInterpreter(manager, device)
        for page in PDFPage.get_pages(filepath, check_extractable=False):
            interpreter.process_page(page)
        text = retstr.getvalue()
        filepath.close()
        device.close()
        retstr.close()
        return text
    pdf_file = f"C:/Users/berat/pdfscrap/{pdf}.pdf"
    sirket_haberleri_pattern = '(?<=KAP Haberleri).*?(?=Veri Takvimi)'
    text_list = []
    sirket_haber_list_1 =[]
    text_list.append(pdf_to_text(pdf_file))
    for text in text_list:
        sirket_haber_list_1.append(re.findall(sirket_haberleri_pattern, text, re.DOTALL))
    text = sirket_haber_list_1[0][0]
    text_splitted1 = text.split("\n")
    text_splitted = []
    for row in text_splitted1:
        if row != '' and row != ' ' and row != '  ' and row != '   ':
            text_splitted.append(row)

    text_splitted3 = []
    for row in text_splitted:
        if '*Kamuyu Aydınlatma  Platformu’na' not in row and 'gelen haberleri' not in row and 'Şirket haberleri araştırm' not in row and '444 0 435' not in row and 'ww.gedikyatirim.com.t' not in row and 'Günlük Bülten' not in row and 'SPK  ve  BIST  kararıyla  Tedb' not in row and 'buradan ulaşabil' not in row:
            text_splitted3.append(row)

    text_splitted = text_splitted3

    pattern = re.compile(r'\d\d\:\d\d\:\d\d')
    list1 = []
    for row in text_splitted:
        x = pattern.findall(row)
        row = ' '.join([str(i) for i in x])
        list1.append(row)
    matcher = [x for x in list1 if x]

    matches2 = []
    for row in text_splitted:
        for match in matcher:
            if match in row:
                matches2.append(row)

    matches3 = []
    for row in matches2:
        if '/' not in row:
            for i in range(0, len(text_splitted)):
                if text_splitted[i] == row:
                    a = text_splitted[i-1]
            b = a + row
            matches3.append(b)
        else:
            matches3.append(row)

    if sum(c.isdigit() for c in text_splitted[1]) == 8:
        matches3.insert(0, text_splitted[1])

    matches = matches3

    #
    multiple1 = []
    for i in range(0, len(matches)):
        if '/' not in matches[i]:
            multiple1.append(matches[i])

    text_splitted4 = []
    if len(multiple1)>0:
        for i in range(0, len(text_splitted)):
            for row in multiple1:
                if row in text_splitted[i]:
                    joined = text_splitted[i - 1] + row
                    text_splitted4.append(joined)
                    del text_splitted4[i-1]
                else:
                    text_splitted4.append(text_splitted[i])

    if len(text_splitted4) != 0:
        text_splitted = text_splitted4


    text_splitted5 = []
    for row in text_splitted:
        text_splitted5.append(row.strip())
    text_splitted = text_splitted5
    text_splitted_son = []
    for row in text_splitted:
        text_splitted_son.append(row + ' ')
    text_splitted = text_splitted_son
    text = "".join(text_splitted[1:])

    news_list = []
    text1 = text
    for match in matches:
        news_list.append(text1.split(match)[0])
        text1 = text1.split(match)[1]
    news_list.append(text)
    news_list = news_list[1:]

    #
    multiple_codes1 = []
    codes = []
    for match in matches:
        if ',' in match:
            multiple_codes1.append(match.split('/')[1].split(','))
            multiple_codes1_stripped = []
            for row in multiple_codes1[0]:
                multiple_codes1_stripped.append(row.strip())
            multiple_codes1_stripped[-1] = multiple_codes1_stripped[-1][0:5].strip()
            codes.append(multiple_codes1_stripped)
        else:
            codes.append(match.split('/')[1][0:7].strip()[0:5].strip())

    tarih1 = text_splitted[0]
    aylar1 = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık']
    aylar2 = ['01','02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']
    aylar = dict(zip(aylar1,aylar2))

    for i in range(0,len(aylar1)):
        if aylar1[i] in tarih1:
            tarih2 = tarih1.split(aylar1[i])[0].strip() + '.' + aylar2[i] + '.' + tarih1.split(aylar1[i])[1].strip()

    codes_last = []
    news_last = []
    tarih = []
    aracı_kurum = []

    for i in range(0, len(news_list)):
        if type(codes[i]) == list:
            for code in codes[i]:
                codes_last.append(code)
                news_last.append(news_list[i])
                tarih.append(tarih2)
                aracı_kurum.append('Gedik Yatırım')

        else:
            codes_last.append(codes[i])
            news_last.append(news_list[i])
            tarih.append(tarih2)
            aracı_kurum.append('Gedik Yatırım')
    #------------------------------ DATA-FRAME
    data = pd.DataFrame(zip(aracı_kurum,tarih,codes_last,news_last))
    data.columns = ['aracı_kurum','tarih','hisse','haber']
    
    return data
    #------------------------------ output
gedik = gedik_yatırım()
